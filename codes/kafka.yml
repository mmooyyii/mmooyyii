# 一个最简单的k8s的kafka部署配置文件，一个zookeeper，一个kafka
# 网上的kafka部署脚本基本全部都无法在其他pod访问，全都是listen的127.0.0.1，部署来有什么用？？？？
# 通过status.podIP获取ip，然后使kafka能在pod间通信
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:3.6.2
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
            - name: ZOO_SERVER_ID
              value: "1"
            - name: ZOO_SERVERS
              value: 0.0.0.0:2888:3888

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: follower
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: leader
      port: 3888
      protocol: TCP
      targetPort: 3888
  selector:
    app: zookeeper

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      id: "kafka"
  template:
    metadata:
      labels:
        app: kafka
        id: "kafka"
    spec:
      containers:
        - name: kafka
          image: "wurstmeister/kafka:2.12-2.5.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POD-IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://$(POD-IP):9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    name: kafka
spec:
  ports:
    - port: 9092
      name: kafka-port
      protocol: TCP
      targetPort: 9092
  selector:
    app: kafka
    id: "kafka"
  type: ClusterIP
